--langdef=scala
--langmap=scala:.scala
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private[^ ]*|protected)?[[:space:]]*class[[:space:]]+([a-zA-Z0-9_]+)/\4/c,classes/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private[^ ]*|protected)?[[:space:]]*object[[:space:]]+([a-zA-Z0-9_]+)/\4/o,objects/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private[^ ]*|protected)?[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*case class[[:space:]]+([a-zA-Z0-9_]+)/\6/s,caseclasses/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private[^ ]*|protected)?[[:space:]]*case object[[:space:]]+([a-zA-Z0-9_]+)/\4/b,caseobjects/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private[^ ]*|protected)?[[:space:]]*trait[[:space:]]+([a-zA-Z0-9_]+)/\4/t,traits/
--regex-scala=/^[[:space:]]*type[[:space:]]+([a-zA-Z0-9_]+)/\1/T,types/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy|private[^ ]*(\[[a-z]*\])*|protected)[[:space:]]*)*def[[:space:]]+([a-zA-Z0-9_]+)/\4/m,methods/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy|private[^ ]*|protected)[[:space:]]*)*val[[:space:]]+([a-zA-Z0-9_]+)/\3/n,constants/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy|private[^ ]*|protected)[[:space:]]*)*var[[:space:]]+([a-zA-Z0-9_]+)/\3/v,variables/
--regex-scala=/^[[:space:]]*package[[:space:]]+([a-zA-Z0-9_.]+)/\1/p,packages/
